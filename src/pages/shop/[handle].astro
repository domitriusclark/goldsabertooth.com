---
import BaseLayout from '../../layouts/BaseLayout.astro';
import ImageZoom from '../../components/ui/ImageZoom';
import VariantSelector from '../../components/ui/VariantSelector';
import AddToCartButton from '../../components/ui/AddToCartButton';
import Price from '../../components/ui/Price';
import { getProductByHandle } from '../../lib/shopify';

// Get the product handle from the URL
const { handle } = Astro.params;

if (!handle) {
  return Astro.redirect('/shop');
}

// Fetch the product
const product = await getProductByHandle(handle);

if (!product) {
  return Astro.redirect('/shop');
}

// SEO
const title = `${product.title} | Goldsabertooth`;
const description = product.description.slice(0, 160);
const featuredImage = product.images[0]?.url;
---

<BaseLayout title={title} description={description} image={featuredImage}>
  <div class="min-h-screen py-8 px-4">
    <div class="max-w-7xl mx-auto">
      
      <!-- Breadcrumb -->
      <nav class="flex items-center space-x-2 mb-8 text-sm font-body">
        <a href="/" class="text-paper hover:text-electric-blue transition-colors">Home</a>
        <span class="text-gray-400">‚Üí</span>
        <a href="/shop" class="text-paper hover:text-electric-blue transition-colors">Shop</a>
        <span class="text-gray-400">‚Üí</span>
        <span class="text-electric-blue">{product.title}</span>
      </nav>

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        
        <!-- Product Images -->
        <div class="space-y-4">
          {product.images.length > 0 ? (
            <>
              <!-- Main Image -->
              <div class="aspect-square comic-border bg-paper overflow-hidden group cursor-zoom-in">
                <img
                  src={product.images[0].url}
                  alt={product.images[0].altText || product.title}
                  width={product.images[0].width}
                  height={product.images[0].height}
                  class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
                  id="main-product-image"
                />
              </div>

              <!-- Thumbnail Images -->
              {product.images.length > 1 && (
                <div class="grid grid-cols-4 gap-2">
                  {product.images.slice(1, 5).map((image, index) => (
                    <button
                      class="aspect-square comic-border-sm bg-paper overflow-hidden hover:scale-105 transition-transform duration-200 focus:outline-none focus:ring-2 focus:ring-electric-blue"
                      onclick={`document.getElementById('main-product-image').src = '${image.url}'`}
                    >
                      <img
                        src={image.url}
                        alt={image.altText || `${product.title} view ${index + 2}`}
                        width={image.width}
                        height={image.height}
                        class="w-full h-full object-cover"
                        loading="lazy"
                      />
                    </button>
                  ))}
                </div>
              )}
            </>
          ) : (
            <div class="aspect-square comic-border bg-gray-100 flex items-center justify-center">
              <span class="text-gray-400 font-body">No images available</span>
            </div>
          )}
        </div>

        <!-- Product Info -->
        <div class="space-y-8">
          
          <!-- Title & Price -->
          <div>
            <h1 class="graffiti-sm text-electric-blue mb-4">
              {product.title}
            </h1>
            
            <div class="flex items-center justify-between mb-4">
              <div class="text-3xl font-bold text-paper">
                {product.priceRange.minVariantPrice.amount === product.priceRange.maxVariantPrice.amount ? (
                  <Price money={product.priceRange.minVariantPrice} />
                ) : (
                  <span>
                    FROM <Price money={product.priceRange.minVariantPrice} />
                  </span>
                )}
              </div>
              
              {product.productType && (
                <span class="px-3 py-1 font-body bg-neon-lime text-ink comic-border-sm">
                  {product.productType.toUpperCase()}
                </span>
              )}
            </div>

            {!product.availableForSale && (
              <div class="comic-border bg-neon-orange p-3 mb-4">
                <p class="font-display text-ink text-center">‚ö†Ô∏è SOLD OUT</p>
              </div>
            )}
          </div>

          <!-- Description -->
          {product.descriptionHtml && (
            <div class="prose prose-invert max-w-none">
              <div 
                class="font-body text-paper leading-relaxed"
                set:html={product.descriptionHtml}
              />
            </div>
          )}

          <!-- Variant Selector -->
          <VariantSelector 
            product={product}
            selectedOptions={{}}
            onSelectionChange={() => {}}
            client:load
          />

          <!-- Add to Cart -->
          <AddToCartButton 
            variantId={product.variants[0]?.id || null}
            availableForSale={product.availableForSale}
            client:load
          />

          <!-- Product Details -->
          <div class="comic-border bg-paper p-6 space-y-4">
            <h3 class="font-display text-lg text-ink outline-text">PRODUCT DETAILS</h3>
            
            <div class="grid grid-cols-2 gap-4 text-sm font-body text-gray-600">
              {product.vendor && (
                <div>
                  <span class="font-medium text-ink">Artist:</span>
                  <span class="ml-2">{product.vendor}</span>
                </div>
              )}
              
              <div>
                <span class="font-medium text-ink">Type:</span>
                <span class="ml-2">{product.productType || 'Art'}</span>
              </div>

              {product.tags.length > 0 && (
                <div class="col-span-2">
                  <span class="font-medium text-ink">Tags:</span>
                  <div class="flex flex-wrap gap-1 mt-1">
                    {product.tags.map((tag) => (
                      <a
                        href={`/shop?tag=${tag}`}
                        class="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded hover:bg-gray-200 transition-colors"
                      >
                        {tag}
                      </a>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </div>

          <!-- Share -->
          <div class="flex items-center space-x-4">
            <span class="font-display text-paper">SHARE THE CHAOS:</span>
            <button 
              onclick="navigator.share ? navigator.share({title: document.title, url: window.location.href}) : navigator.clipboard.writeText(window.location.href)"
              class="px-3 py-2 comic-border-sm bg-electric-blue hover:bg-electric-blue-dark text-ink font-body text-sm btn-psychedelic transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-electric-blue"
            >
              üì§ SHARE
            </button>
          </div>
        </div>
      </div>

      <!-- Related Products Placeholder -->
      <div class="mt-16 pt-16 border-t-2 border-ink">
        <h2 class="graffiti-sm text-center text-neon-orange mb-8">
          MORE CHAOS
        </h2>
        <div class="text-center">
          <a 
            href="/shop"
            class="inline-block px-8 py-4 text-xl font-display comic-border bg-psychedelic-purple hover:bg-psychedelic-purple-dark text-paper btn-psychedelic transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-electric-blue focus:ring-offset-2 focus:ring-offset-ink"
          >
            EXPLORE ALL ART ‚Üí
          </a>
        </div>
      </div>
    </div>
  </div>

  <!-- Image Zoom Modal -->
  <ImageZoom 
    image={product.images[0] || { id: '', url: '', width: 0, height: 0 }}
    isOpen={false}
    onClose={() => {}}
    client:load
  />
</BaseLayout>

<script>
  // Add click handler for main image zoom
  document.addEventListener('DOMContentLoaded', () => {
    const mainImage = document.getElementById('main-product-image');
    if (mainImage) {
      mainImage.addEventListener('click', () => {
        // Trigger image zoom modal
        // This would need to be integrated with the React component
        console.log('Open image zoom');
      });
    }
  });
</script>